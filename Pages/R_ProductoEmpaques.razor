@page "/R_ProductoEmpaques"
@inject IToastService toast
<PageTitle>Productos empaques</PageTitle>

<EditForm Model="ProductosEmpacados" OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator/>

        <div className="Container">
            <div class="card">

                <div class="card-header">
                    <h3>Entrada de Productos Empacados</h3>
                </div>


                <div class="card-body">
                    <form class="row mb-3">
                        @* Id *@
                        <label for="exampleFormControlInput1" class="form-label">Id</label>
                        <div class="col-auto">
                           
                            <InputNumber @bind-Value="ProductosEmpacados.ProductoEmpacadosId" class="form-control col-4" />
                            <ValidationMessage For="@(() => ProductosEmpacados.ProductoEmpacadosId)" />

                        </div>
                        <div class="col-auto">
                            <button type="button" @onclick="Buscar" class="btn btn-primary mb-3"><span class="oi oi-magnifying-glass"></span></button>
                        </div>



                        @* Fecha *@
                        <label for="exampleFormControlInput1" class="form-label">Fecha actual</label>
                        <div class="col-auto mb-3">
                            <InputDate class="form-control" @bind-Value="ProductosEmpacados.FechaCreacion" />
                        </div>


                        @* Concepto *@
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label">Concepto</label>
                             <div class="col-auto">
                                   <InputText class="form-control" @bind-Value="ProductosEmpacados.Concepto"/>
                                    <ValidationMessage For="@(() => ProductosEmpacados.Concepto)" />
                             </div>
                        </div>
                        
                    </form>
                </div>


            @*Utilizados detalle*@
            <div class="card">
                <div class="card-header">
                    <h3>Utilizados</h3>
                </div>

                <div class="card-body">

                    <form>
                        <div class="input-group d-flex align-items-end">
                            <InputSelect class="form-control col-2 mb-3" @bind-Value="filtroUtilizados"> @* ProductosEmpacados.ProductoEmpacadosId *@

                                <option value="0" disabled selected>Seleccione un producto</option>

                                @foreach (var item in  productosBLL.GetListaProductos()) 
                                {
                                    <option value="@item.ProductoId" >@item.Descripcion
                                       
                                    </option> 

                                    Descripcion = @item.Descripcion;
                                    Peso = @item.Peso*@Cantidad;
                                } 

                                
                            </InputSelect> 

                            @* Cantidad *@
                            <div class="flex-fill mb-3">
                                <label>Cantidad</label>
                                <input class="form-control" @bind="Cantidad" />
                            </div>
                            <button type="button" class="btn btn mb-3 btn-primary" 
                             @onclick="AgregarDetalleEmpaques"> + Add </button>

                        </div>

                    </form>

                </div >
                            <div class="card-body">
                                <table class="table table-light">
                                    <thead class="thead">
                                        <tr class="table">
                                         
                                            <th>Descripción</th>
                                            <th>Cantidad</th>
                                            <th>Peso</th>
                                            <th>Acción</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in ProductosEmpacados.ProductosEmpacadosDetalle)
                                        {
                                            <tr>
                                              
                                                <td>@item.Descripcion</td>
                                                <td>@item.Cantidad</td>
                                                <td>@item.Peso g</td>
                                                <td><span class="btn btn-lg btn-danger oi oi-ban" href="#"  @onclick="@(() => RemoverFila(item))"> </span> </td>
                                            </tr>
                                        } 
                                    </tbody>
                                </table>

                                <span class="input-group-text">Peso total: @ProductosEmpacados.ProductosEmpacadosDetalle.Sum(p => p.Peso)</span> 
                            </div>
                </div>

            </div>


             <div class="card">
                <div class="card-header">
                    <h3>Producido</h3>
                </div>

                <div class="card-body">

                    <form>
                        <div class="input-group d-flex align-items-end">
                            <InputSelect class="form-control col-2 mb-3" @bind-Value="filtroProduccidos"> @* ._producto.ProductoId *@

                                <option value="0" disabled selected>Seleccione un producido</option>
                                
                                @foreach (var item in  productosBLL.GetListaDetalle())
                                {
                                    <option value="@item.ProductosDetallesId" >@item.Descripcion
                                    </option>
                                } 

                            </InputSelect>  
                             

                            @* Cantidad *@
                            <div class="flex-fill mb-3">
                                <label>Cantidad</label>
                                <input class="form-control" @bind-value="ProductosEmpacados.cantidadProducidos"/> @* entrada.cantida *@
                            </div>
                           

                        </div>

                    </form>

                </div>
            </div>   

            <div class="card">
                <div class="card-header">
                    <div class="form-group text-center"  >
           
                        <button type="button" class="btn btn-lg btn-primary"
                            @onclick="Nuevo"><span class="oi oi-plus"></span> Nuevo</button>

                        <button type="submit"  class="btn btn-lg btn-success"
                            @onclick="Guardar"><span class="oi oi-media-stop"></span> Guardar</button>
                            
                        <button type="button" class="btn btn-lg btn-danger"
                            @onclick="Eliminar"> <span class="oi oi-x"></span> Eliminar</button> 

                    </div>
                </div>
            </div>
        </div>


</EditForm>

@code {

    [Parameter]
    public int ProductoEmpacadosId {get; set;}
    public string filtroUtilizados { get; set; }
    public string filtroProduccidos { get; set; }

    public ProductosEmpacados ProductosEmpacados {get; set; } = new ProductosEmpacados();
    public ProductosEmpacadosDetalle ProductosEmpacadosDetalle {get; set; } = new ProductosEmpacadosDetalle();

    [Inject]  
    public ProductosEmpacadosBLL? productosEmpacadosBLL {get; set;}

    [Inject]  
    public ProductosBLL? productosBLL { get; set; }
   

        protected override void OnInitialized()
        {
            ProductosEmpacados.ProductoEmpacadosId = ProductoEmpacadosId;
            base.OnInitialized();
        }
    
    public string Descripcion { get; set; }
    public int Cantidad {get; set; }    
    public float Peso {get; set; }

    private void AgregarDetalleEmpaques()
    {
        ProductosEmpacados.ProductosEmpacadosDetalle.Add(new ProductosEmpacadosDetalle(Descripcion, Cantidad, Peso));
    }

    private void RemoverFila(ProductosEmpacadosDetalle item)
    {
        this.ProductosEmpacados.ProductosEmpacadosDetalle.Remove(item);
    }

    public void Buscar()
    {
        if(this.ProductoEmpacadosId > 0)
        {
            ProductosEmpacados encontrado = productosEmpacadosBLL.Buscar(this.ProductosEmpacados.ProductoEmpacadosId);

            if(encontrado != null)
            {
               this.ProductosEmpacados = encontrado;
               toast.ShowSuccess("Producto empacado encontrado. ");
            }
            else
            {
                ProductosEmpacados = new ProductosEmpacados();
                toast.ShowError("No se encontró el producto empacado");
            }
        } 

    }

    public void Nuevo()
    {
        ProductosEmpacados = new ProductosEmpacados();
        ProductosEmpacadosDetalle = new ProductosEmpacadosDetalle();
        Descripcion = "";
        Cantidad = 0; 
        Peso = 0;
    }

    public void Guardar()
    {
        if(productosEmpacadosBLL.Guardar(this.ProductosEmpacados))
        {
           
            toast.ShowInfo("Se guardo exitosamente.");
            Nuevo();
        }
        else
        {
            toast.ShowError("No se pudo guardar.");
            Nuevo();
        }

    }

    public void Eliminar()
    {
        bool elimnado = productosEmpacadosBLL.Eliminar(this.ProductosEmpacados.ProductoEmpacadosId);
        if(elimnado)
        {
            Nuevo();
            toast.ShowSuccess("Eliminacion exitosa.");
        }
        else
        {
            toast.ShowError("Eliminacion fallida.");
        }

    }

}




